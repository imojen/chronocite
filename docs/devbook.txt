# Dev Book : ChronocitÃ© - Phase de DÃ©veloppement

## 1. Objectifs de DÃ©veloppement âœ…
- âœ… Construire un jeu idle/clicker jouable sur navigateur
- âœ… Garantir une exÃ©cution fluide en utilisant Angular 19 et localStorage
- âœ… RÃ©duire au minimum les dÃ©pendances externes
- ğŸŸ¡ S'assurer que le jeu est robuste et facile Ã  maintenir grÃ¢ce Ã  des tests systÃ©matiques

## 2. Architecture du Projet

### 2.1 Structure des Dossiers âœ…
- âœ… Structure de base avec composants standalone
- âœ… Organisation modulaire des composants et services

### 2.2 Modules ClÃ©s

#### Core âœ…
- âœ… Services partagÃ©s (localStorage, game loop, pause/reprise)
- âœ… Sauvegarde automatique
- âœ… Gestion des amÃ©liorations
- âœ… Gestion centralisÃ©e des Ã©tats du jeu

#### Composants
1. **Gameplay** âœ…
   - âœ… Structure de base
   - âœ… GÃ©nÃ©ration de ressources
   - âœ… Composants standalone
   - âœ… Gestion des bÃ¢timents
   - âœ… Ã‰conomie du jeu (Ã©quilibrage)

2. **Upgrades** âœ…
   - âœ… Structure de base
   - âœ… SystÃ¨me d'amÃ©liorations
   - âœ… ModÃ¨le d'amÃ©lioration
   - âœ… Gestion des effets
   - âœ… SystÃ¨me de dÃ©blocage progressif

3. **Cycles** â­•
   - âœ… Structure de base
   - â­• Gestion des cycles
   - â­• MÃ©canismes d'Ã©quilibrage

4. **Interface Utilisateur (UI)** âœ…
   - âœ… Structure de base des composants
   - âœ… Organisation des panneaux principaux
   - âœ… Tableaux de ressources
   - âœ… Indicateurs en temps rÃ©el
   - âœ… AmÃ©liorations visuelles et UX

## 3. FonctionnalitÃ©s ImplÃ©mentÃ©es

### 3.1 MÃ©caniques de Base âœ…
- âœ… Production automatique de ressources
- âœ… SystÃ¨me de bÃ¢timents avec coÃ»ts croissants
- âœ… Multiplicateurs et bonus
- âœ… Sauvegarde/chargement de partie

### 3.2 Interface âœ…
- âœ… Affichage des ressources avec notation scientifique
- âœ… Grille de bÃ¢timents avec images
- âœ… Menu de navigation
- âœ… SystÃ¨me de notifications

### 3.3 AmÃ©liorations âœ…
- âœ… SystÃ¨me d'achat d'amÃ©liorations
- âœ… Effets variÃ©s (multiplicateurs, rÃ©ductions de coÃ»t)
- âœ… Conditions de dÃ©blocage
- âœ… Arbre de progression

## 4. Prochaines Ã‰tapes

### 4.1 PrioritÃ©s ImmÃ©diates
1. â­• ImplÃ©mentation des cycles
2. â­• Ajout de plus de contenu (bÃ¢timents, amÃ©liorations)
3. â­• SystÃ¨me d'accomplissements
4. â­• Plus d'effets visuels

### 4.2 AmÃ©liorations Futures
1. â­• Sons et musique
2. â­• Localisation (multi-langue)
3. â­• SystÃ¨me de prestige
4. â­• Achievements

## 5. Tests et QualitÃ© ğŸŸ¡
- âœ… Tests unitaires de base
- ğŸŸ¡ Tests d'intÃ©gration
- â­• Tests de performance
- â­• Tests end-to-end

## 6. Documentation ğŸŸ¡
- âœ… Documentation du code
- ğŸŸ¡ Guide de dÃ©veloppement
- â­• Documentation utilisateur

---

# SystÃ¨me de jeu

## Ressources
- Fragments de temps : ressource principale
- Production de base : 0.1 fragments/s

## BÃ¢timents
- GÃ©nÃ©rateur temporel : produit 1 fragment/s, coÃ»t initial 10
- AccÃ©lÃ©rateur : produit 5 fragments/s, coÃ»t initial 50
- SystÃ¨me de coÃ»t croissant : +15% par achat

## MÃ©caniques
- Production automatique toutes les secondes
- Sauvegarde automatique toutes les minutes
- PossibilitÃ© de rÃ©initialiser la partie

## Interface
- Affichage des ressources
- Liste des bÃ¢timents avec :
  - Nom et description
  - Nombre possÃ©dÃ©
  - Production actuelle
  - CoÃ»t d'achat

## Ã€ implÃ©menter
- SystÃ¨me de cycles
- Plus de bÃ¢timents
- Statistiques de jeu
- SystÃ¨me d'accomplissements
- Exportation/importation de sauvegardes  
